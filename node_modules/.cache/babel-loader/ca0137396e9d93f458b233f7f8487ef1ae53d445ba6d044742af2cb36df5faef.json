{"ast":null,"code":"var _jsxFileName = \"/home/alin/FACE-RECOGNITION-BRAIN/src/App.js\";\nimport React, { Component } from 'react';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\n// const app = new Clarifai.App({\n//   apiKey: '7fdec79ebf9246a18e3514aa39c4f618'\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = 'af6896bec7c54735b5c4219cdec3977c';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'alinalin';\n  const APP_ID = 'hemclarify';\n  // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n\n      //app.models.predict('face-detection', this.state.input)\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiOptions(this.state.input)).then(response => response.json()).then(response => {\n        console.log('hi', response);\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        num: 200,\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","ParticlesBg","Clarifai","jsxDEV","_jsxDEV","returnClarifaiOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","state","fetch","then","response","json","console","log","id","user","count","Object","assign","entries","catch","err","onRouteChange","route","isSignedIn","name","email","joined","render","className","children","type","num","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/alin/FACE-RECOGNITION-BRAIN/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\n\n// const app = new Clarifai.App({\n//   apiKey: '7fdec79ebf9246a18e3514aa39c4f618'\n// });\n\nconst returnClarifaiOptions = (imageUrl) => {\n\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n      const PAT = 'af6896bec7c54735b5c4219cdec3977c';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'alinalin';       \n    const APP_ID = 'hemclarify';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';\n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": IMAGE_URL\n                  }\n              }\n          }\n      ]\n  });\n\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n};\n\nreturn requestOptions;\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n  const image = document.getElementById('inputImage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col*width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n\n\n  //app.models.predict('face-detection', this.state.input)\n  fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiOptions(this.state.input))\n  .then(response => response.json())\n  .then(response => {\n    console.log('hi', response)\n    if (response) {\n      fetch('http://localhost:3000/image', {\n        method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          id: this.state.user.id\n        })\n      })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count }))\n        })\n\n    }\n    this.displayFaceBox(this.calculateFaceLocation(response))\n  })\n  .catch(err => console.log(err));\n}\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState({isSignedIn: false})\n  } else if (route === 'home') {\n    this.setState({isSignedIn: true})\n  } \n  this.setState({route: route}); \n}\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"cobweb\" num={200} bg={true} />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home' \n          ? <div>\n              <Logo /> \n              <Rank \n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n            </div>\n          : (\n            this.state.route === 'signin' \n              ? <Signin onRouteChange={this.onRouteChange}/>\n              : <Register onRouteChange={this.onRouteChange} />\n            )\n        }\n        </div>\n    )\n  }\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
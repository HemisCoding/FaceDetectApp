{"ast":null,"code":"var _jsxFileName = \"/home/alin/face-recognition-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '7fdec79ebf9246a18e3514aa39c4f618'\n});\nconst setupClarify = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = 'af6896bec7c54735b5c4219cdec3977c';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'alinalin';\n  const APP_ID = 'hemclarify';\n  // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  return requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n};\nfetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n\n      //   app.models.predict('face-detection', this.state.input)\n      //   fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiOptions(this.state.input))\n      //   .then(response => response.json())\n      //   .then(response => {\n      //     console.log('hi', response)\n      //     if (response) {\n      //       fetch('http://localhost:3000/image', {\n      //         method: 'put',\n      //         headers: {'Content-Type': 'application/json'},\n      //         body: JSON.stringify({\n      //           id: this.state.user.id\n      //         })\n      //       })\n      //         .then(response => response.json())\n      //         .then(count => {\n      //           this.setState(Object.assign(this.state.user, { entries: count}))\n      //         })\n\n      //     }\n      //     this.displayFaceBox(this.calculateFaceLocation(response))\n      //   })\n      //   .catch(err => console.log(err));\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        num: 200,\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","Clarifai","jsxDEV","_jsxDEV","app","App","apiKey","setupClarify","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","console","log","catch","error","constructor","onInputChange","event","target","value","onButtonSubmit","setState","state","input","box","route","isSignedIn","user","id","name","email","entries","joined","render","className","children","type","num","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/alin/face-recognition-brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n  apiKey: '7fdec79ebf9246a18e3514aa39c4f618'\n});\n\nconst setupClarify = (imageUrl) => {\n\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n      const PAT = 'af6896bec7c54735b5c4219cdec3977c';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'alinalin';       \n    const APP_ID = 'hemclarify';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';\n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": IMAGE_URL\n                  }\n              }\n          }\n      ]\n  });\n\n  return requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n};\n\n}\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n   this.setState({imageUrl: this.state.input});\n\n//   app.models.predict('face-detection', this.state.input)\n//   fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiOptions(this.state.input))\n//   .then(response => response.json())\n//   .then(response => {\n//     console.log('hi', response)\n//     if (response) {\n//       fetch('http://localhost:3000/image', {\n//         method: 'put',\n//         headers: {'Content-Type': 'application/json'},\n//         body: JSON.stringify({\n//           id: this.state.user.id\n//         })\n//       })\n//         .then(response => response.json())\n//         .then(count => {\n//           this.setState(Object.assign(this.state.user, { entries: count}))\n//         })\n\n//     }\n//     this.displayFaceBox(this.calculateFaceLocation(response))\n//   })\n//   .catch(err => console.log(err));\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"cobweb\" num={200} bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm\n        onInputChange={this.onInputChange}\n        onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageUrl={this.state.imageUrl}/>\n      </div>\n    );\n  }\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}